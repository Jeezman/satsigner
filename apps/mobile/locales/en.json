{
  "en": {
    "satsigner": {
      "name": "SatSigner"
    },
    "common": {
      "cancel": "Cancel",
      "valid": "Valid",
      "invalid": "Invalid",
      "optional": "Optional",
      "select": "Select",
      "selectAll": "Select All",
      "selected": "Selected",
      "deselectAll": "Deselect All",
      "next": "Next",
      "confirm": "Confirm",
      "close": "Close",
      "acknowledge": "Acknowledge",
      "warning": "Warning",
      "of": "Of",
      "to": "To",
      "more": "More",
      "less": "Less",
      "total": "Total",
      "date": "Date",
      "amount": "Amount",
      "save": "Save",
      "from": "From",
      "memo": "Memo",
      "clear": "Clear",
      "goBack": "Go back",
      "version": "Version",
      "address": "Address",
      "transaction": "Transaction",
      "bytes": "Bytes",
      "tags": "Tags",
      "label": "Label",
      "block": "Block",
      "outputIndex": "Output index",
      "value": "Value",
      "addTag": "Add tag",
      "createTag": "Create tag"
    },
    "time": {
      "lessThanAMinute": "Less than a minute"
    },
    "bitcoin": {
      "word": "Word",
      "words": "Words",
      "checksum": "Checksum",
      "fingerprint": "Fingerprint",
      "passphrase": "Passphrase",
      "script": "Script",
      "notYourKeys": "Not your keys",
      "notYourCoins": "Not your coins",
      "sats": "Sats",
      "memo": "Memo",
      "confirmations": {
        "unconfirmed": "Unconfirmed",
        "oneBlock": "Block deep",
        "manyBlocks": "Blocks deep"
      }
    },
    "auth": {
      "setPin": ["Set pin number to", "enter the app"],
      "reenterPin": ["Re-enter your", "pin number"],
      "confirm": "Confirm pin number",
      "set": "Set pin number",
      "setLater": "Set pin later",
      "pinsMatch": "Pin number match",
      "pinsDontMatch": "No pin number match",
      "unlock": "Unlock sat signer",
      "tryLeft": "Try left",
      "triesLeft": "Tries left"
    },
    "settings": {
      "title": "Config",
      "bitcoinNetwork": {
        "title": "Network",
        "description": "Connect to a node to communicate with the bitcoin main network, testnet or signet",
        "backend": "Backend",
        "network": "Network",
        "url": "Url",
        "retries": "Retries",
        "timeout": "Timeout",
        "stopGap": "Stop Gap"
      },
      "appSecurity": {
        "title": "App Security",
        "description": "Change app wide security settings to protect access in case of a compromised device",
        "maxPinTries": "Maximum pin tries",
        "backgroundLockTime": "Background lock time"
      },
      "about": {
        "title": "About",
        "description": "App version and other versioning information"
      },
      "developer": {
        "title": "Developer",
        "description": "Available in dev mode only. Useful tools for developers for faster development"
      },
      "features": {
        "title": "Features",
        "description": "Reveal more or less information about the app and the bitcoin protocol.",
        "featurePage": {
          "title": "Features",
          "transactionChart": {
            "title": "Transaction Chart",
            "description": "Control the visible layers and navigation of the transaction history chart"
          },
          "currencyFormatting": {
            "title": "Currency Formatting",
            "description": "Currency display and formatting"
          },
          "chartSettingsPage": {
            "title": "Chart Settings",
            "layersTitle": "Layers",
            "layersShowLabels": "Show Labels",
            "layersShowAmounts": "Show Amounts",
            "layersShowTransactionInfo": "Show Transaction Info",
            "layersShowOutputFields": "Show Output Fields",
            "navigationTitle": "Navigation",
            "navigationLockZoomXAxis": "Lock Zoom To X-Axis"
          }
        }
      }
    },
    "accountList": {
      "noKeysYet": "No keys yet",
      "totalTransactions": ["Total", "Transactions"],
      "childAccounts": ["Child", "Accounts"],
      "spendableOutputs": ["Spendable", "Outputs"],
      "satsInMempool": ["Sats in", "Mempool"]
    },
    "account": {
      "signAndSend": "Sign & Send",
      "newInvoice": "New Invoice",
      "parentAccountActivity": "Parent Account Activity",
      "noMemo": "No memo",
      "noLabel": "No label",
      "noTags": "No tags"
    },
    "signAndSend": {
      "selectSpendableOutputs": "Select spendable outputs",
      "addAsInputToMessage": "Add as input to message",
      "customAmount": "Custom amount",
      "selectAll": "Select all",
      "setMessageFee": "Set message fee",
      "addInput": "Add input",
      "addOutput": "Add output",
      "addRecipientOutputs": "Add recipient outputs",
      "deselectAll": "Deselect all"
    },
    "ioPreview": {
      "typeMemo": "Type memo",
      "addInput": "Add input",
      "addOutput": "Add output",
      "setMessageFee": "Set message fee"
    },
    "feeSelection": {
      "previewTxMessage": "Preview tx message"
    },
    "previewMessage": {
      "signTxMessage": "Sign tx message"
    },
    "signMessage": {
      "broadcastTxMessage": "Broadcast tx message"
    },
    "messageConfirmation": {
      "messageBroadcasted": "Message broadcasted",
      "messageId": "Message id",
      "copyTxMessageId": "Copy tx message id",
      "trackOnChain": "Track on chain",
      "backToAccountHome": "Back to account home"
    },
    "camera": {
      "scanText": "Scan any Bitcoin or Lightning related QR code.",
      "permissions": "Enable camera access in your phone's settings to scan a QR code."
    },
    "newInvoice": {
      "invoice": "Invoice",
      "path": "Path",
      "address": "Address",
      "customAmount": "Custom Amount",
      "memo": "Memo",
      "generateAnotherInvoice": "Generate another invoice"
    },
    "addMasterKey": {
      "title": "Add Master Key",
      "masterKeyName": "Master Key Name",
      "hasAccountWithName": "Account with that name already exists",
      "walletSyncFailed": "Failed to sync wallet. Make sure you have internet connection.",
      "generateNewSeed": {
        "title": "Generate New Secret Seed",
        "action": "Confirm Seed"
      },
      "confirmSeed": {
        "incorrectWordModal": {
          "warning": "Selected word doesn't match the original seed",
          "action": "Review and try again"
        },
        "warningModal": {
          "warning": "Keep this information secret and backed up.",
          "disclaimer1": "Anyone with this information can move the sats to another account.",
          "disclaimer2": "Consider an air-gapped hardware device for generating keys for significant amounts.",
          "disclaimer3": "Losing this information will lose the funds."
        }
      },
      "importExistingSeed": {
        "title": "Import Existing Seed",
        "action": "Save Secret Seed",
        "accountAdded": "Parent account has been added",
        "accountAddedModal": {
          "derivationPath": "Derivation path",
          "utxos": "Found UTXOs",
          "sats": "Total spendable sats"
        },
        "noMatchingWords": "No Matching Words"
      },
      "accountOptions": {
        "policyType": "Policy Type",
        "policyTypes": {
          "singleSignature": "Single Signature"
        },
        "scriptVersion": "Script Version",
        "scriptVersions": {
          "names": {
            "p2pkh": "Legacy",
            "p2sh-p2wpkh": "Nested Segwit",
            "p2wpkh": "Native Segwit",
            "p2tr": "Taproot"
          },
          "descriptions": {
            "p2pkh": [
              "Legacy",
              "which locks bitcoin to the hash of a public key."
            ],
            "p2sh-p2wpkh": [
              "Nested Segwit",
              "which locks bitcoin to a SegWit witness program wrapped inside a P2SH address. This allows SegWit compatibility with wallets or services that do not fully support SegWit."
            ],
            "p2wpkh": [
              "Native Segwit",
              "which locks bitcoin to a SegWit witness program. It offers reduced transaction fees and improved malleability resistance."
            ],
            "p2tr": [
              "Taproot",
              "which locks bitcoin to a Schnorr public key or a Merkle root of multiple conditions. It enhances privacy and efficiency by combining spending conditions into a single structure."
            ]
          },
          "links": {
            "name": {
              "p2pkh": "ScriptPubKey",
              "p2sh-p2wpkh": "ScriptPubKey",
              "p2wpkh": "ScriptPubKey",
              "p2tr": "ScriptPubKey"
            },
            "url": {
              "p2pkh": "https://river.com/learn/terms/s/scriptpubkey/",
              "p2sh-p2wpkh": "https://river.com/learn/terms/s/scriptpubkey/",
              "p2wpkh": "https://river.com/learn/terms/s/scriptpubkey/",
              "p2tr": "https://river.com/learn/terms/s/scriptpubkey/"
            }
          }
        },
        "mnemonic": "Mnemonic Seed Words (BIP39)",
        "mnemonics": {
          "24": "24 words generated from 256 bits of entropy.",
          "21": "21 words generated from 224 bits of entropy.  For potentially increased computational security, consider using 24 words for new accounts.",
          "18": "18 words generated from 192 bits of entropy.  For potentially increased computational security, consider using 24 words for new accounts.",
          "15": "15 words generated from 160 bits of entropy.  For potentially increased computational security, consider using 24 words for new accounts.",
          "12": "12 words generated from 128 bits of entropy.  For potentially increased computational security, consider using 24 words for new accounts."
        },
        "generateNewSeed": "Generate New Seed",
        "importSeed": "Import Seed"
      }
    },
    "utxoDetails": {
      "title": "UTXO Details",
      "label": "UTXO Label",
      "labelEdit": "Edit UTXO label"
    },
    "txDetails": {
      "title": "TX Details",
      "block": "In block",
      "hash": "Transaction hash",
      "size": "Raw size",
      "weight": "Weight",
      "vsize": "Virtual Size",
      "fee": "Fee",
      "feeBytes": "Fee sat/b",
      "feeVBytes": "Fee sat/vb",
      "raw": "Transaction raw",
      "decoded": "Transaction decoded",
      "version": "Version",
      "inputsCount": "Number of inputs",
      "outputsCount": "Number of outputs",
      "input": "Input",
      "output": "Output",
      "inputPrevTx": "Previous TX Output hash",
      "inputPrevOut": "Output index in transaction",
      "inputSequence": "Sequence",
      "label": "Transaction label",
      "labelEdit": "Edit TX label",
      "decodeTransaction": {
        "version": "This is a 4-byte little-endian integer, representing the transaction version",
        "marker": "This is an 1-byte marker (required to be '00') that serves as an indicator that the given transaction incorporates Segregated Witness (segwit) data.",
        "flag": "This is an 1-byte flag that follows the marker in transactions with witness data. It must be non-zero. It can be interpreted as a bitvector, with the unused bits available for future extensibility for other types of witness data.",
        "txInVarInt": "This is a variable integer (VarInt) that denotes the number of subsequent transaction inputs.",
        "txInHash": "This is the hash of the transaction input. Note that the transaction hash here is in big-endian format, whereas in other places it is typically represented in little-endian format.",
        "txInIndex": "This is a 4-byte little-endian integer which represents the index of the specific output in the previous transaction.",
        "txInScriptVarInt": "This is a variable integer (VarInt) that denotes the length of the subsequent unlocking script.",
        "txInScript": "This is the unlocking script (scriptSig), providing proof of ownership of the bitcoins being spent.",
        "txInSequence": "This is a 4-byte little-endian number that specifies the relative locktime of the transaction input.",
        "txOutVarInt": "This is a variable integer (VarInt) that denotes the number of subsequent transaction outputs.",
        "txOutValue": "This is an 8-byte little-endian number that represents the amount of bitcoin to be sent in satoshis.",
        "txOutScriptVarInt": "This is a variable integer (VarInt) that denotes the length (in bytes) of the subsequent locking script.",
        "txOutScript": "This is the locking script (scriptPubKey), specifying the conditions under which the output can be spent.",
        "witnessVarInt": "This is a variable integer (VarInt) that indicates the number of witness items for the transaction input. Note that each segwit input has its own witnessVarInt. The order of the witness items is the same as the order of the transaction inputs.",
        "witnessItemsVarInt": "This is a variable integer (VarInt) that denotes the length (in bytes) of the subsequent witness item.",
        "witnessItem": "This is a witness item.",
        "witnessItemEmpty": "This witness item is empty.",
        "witnessItemPubkey": "This witness item is a public key.",
        "witnessItemSignature": "This witness item is a signature.",
        "witnessItemScript": "This witness item is a script.",
        "locktime": "This is a 4-byte little-endian number that specifies the absolute locktime of the transaction.",
        "scriptDescriptionStandard": "This scriptPubkey is a standard type and can be encoded as the following address:",
        "scriptDescriptionNonStandard": "This scriptPubKey is non-standard and therefore cannot be encoded as an address."
      }
    }
  }
}
